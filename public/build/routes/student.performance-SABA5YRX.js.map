{
  "version": 3,
  "sources": ["../../../app/routes/student.performance.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\student.performance.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\student.performance.tsx\");\n  import.meta.hot.lastModified = \"1757763759167.921\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Link, useLoaderData, useNavigate } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { ChartBarIcon, TrophyIcon, AcademicCapIcon, CalendarDaysIcon, XMarkIcon, Bars3Icon, HomeIcon, DocumentTextIcon, BellIcon, CogIcon, ArrowRightOnRectangleIcon, StarIcon, ChartPieIcon, BookOpenIcon } from \"@heroicons/react/24/outline\";\nimport { createSupabaseServerClient } from \"~/lib/supabase.server\";\nexport const meta = () => {\n  return [{\n    title: \"Academic Performance - EduHub Student\"\n  }, {\n    name: \"description\",\n    content: \"Track your academic performance and progress\"\n  }];\n};\nexport async function loader({\n  request\n}) {\n  const supabase = createSupabaseServerClient(request);\n\n  // For demo purposes, we'll use student ID 1\n  const currentStudentId = 1;\n\n  // Get all submissions for performance analysis\n  const {\n    data: submissions\n  } = await supabase.from('submissions').select(`\n      *,\n      assignments(title, points, course_id, due_date),\n      courses(name)\n    `).eq('student_id', currentStudentId).order('submitted_at', {\n    ascending: false\n  });\n\n  // Get course information\n  const {\n    data: courses\n  } = await supabase.from('courses').select('*');\n\n  // Calculate performance metrics\n  const performanceData = {};\n  const monthlyPerformance = {};\n  let totalPoints = 0;\n  let totalEarned = 0;\n  submissions?.forEach(submission => {\n    const courseId = submission.assignments?.course_id;\n    const courseName = submission.courses?.name || `Course ${courseId}`;\n    const submissionDate = new Date(submission.submitted_at);\n    const monthKey = `${submissionDate.getFullYear()}-${String(submissionDate.getMonth() + 1).padStart(2, '0')}`;\n\n    // Course-wise performance\n    if (!performanceData[courseId]) {\n      performanceData[courseId] = {\n        courseName,\n        totalAssignments: 0,\n        completedAssignments: 0,\n        totalPoints: 0,\n        earnedPoints: 0,\n        averageScore: 0,\n        grades: []\n      };\n    }\n    performanceData[courseId].totalAssignments++;\n    performanceData[courseId].completedAssignments++;\n    performanceData[courseId].totalPoints += submission.assignments?.points || 0;\n    performanceData[courseId].earnedPoints += submission.points_earned || 0;\n    performanceData[courseId].grades.push({\n      title: submission.assignments?.title,\n      score: submission.points_earned,\n      maxScore: submission.assignments?.points,\n      date: submission.submitted_at,\n      percentage: submission.assignments?.points ? Math.round(submission.points_earned / submission.assignments.points * 100) : 0\n    });\n\n    // Monthly performance\n    if (!monthlyPerformance[monthKey]) {\n      monthlyPerformance[monthKey] = {\n        month: monthKey,\n        totalPoints: 0,\n        earnedPoints: 0,\n        assignments: 0\n      };\n    }\n    monthlyPerformance[monthKey].totalPoints += submission.assignments?.points || 0;\n    monthlyPerformance[monthKey].earnedPoints += submission.points_earned || 0;\n    monthlyPerformance[monthKey].assignments++;\n    totalPoints += submission.assignments?.points || 0;\n    totalEarned += submission.points_earned || 0;\n  });\n\n  // Calculate averages\n  Object.keys(performanceData).forEach(courseId => {\n    const course = performanceData[courseId];\n    course.averageScore = course.totalPoints > 0 ? Math.round(course.earnedPoints / course.totalPoints * 100) : 0;\n  });\n\n  // Get last 6 months performance\n  const last6Months = [];\n  for (let i = 5; i >= 0; i--) {\n    const date = new Date();\n    date.setMonth(date.getMonth() - i);\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    const monthName = date.toLocaleDateString('en-US', {\n      month: 'short',\n      year: 'numeric'\n    });\n    const monthData = monthlyPerformance[monthKey] || {\n      totalPoints: 0,\n      earnedPoints: 0,\n      assignments: 0\n    };\n    last6Months.push({\n      month: monthKey,\n      monthName,\n      percentage: monthData.totalPoints > 0 ? Math.round(monthData.earnedPoints / monthData.totalPoints * 100) : 0,\n      ...monthData\n    });\n  }\n  const overallPercentage = totalPoints > 0 ? Math.round(totalEarned / totalPoints * 100) : 0;\n  return json({\n    performanceData,\n    last6Months,\n    overallPercentage,\n    totalPoints,\n    totalEarned,\n    totalAssignments: submissions?.length || 0,\n    courses: courses || []\n  });\n}\nexport default function StudentAcademicPerformance() {\n  _s();\n  const {\n    performanceData,\n    last6Months,\n    overallPercentage,\n    totalPoints,\n    totalEarned,\n    totalAssignments,\n    courses\n  } = useLoaderData();\n  const navigate = useNavigate();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [selectedCourse, setSelectedCourse] = useState('all');\n  const handleLogout = async () => {\n    try {\n      localStorage.removeItem('student_session');\n      sessionStorage.clear();\n      navigate('/', {\n        replace: true\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n      navigate('/', {\n        replace: true\n      });\n    }\n  };\n  const navigation = [{\n    name: 'Dashboard',\n    href: '/student/dashboard',\n    icon: HomeIcon,\n    current: false\n  }, {\n    name: 'Assignments',\n    href: '/student/assignments',\n    icon: DocumentTextIcon,\n    current: false\n  }, {\n    name: 'Attendance',\n    href: '/student/attendance',\n    icon: CalendarDaysIcon,\n    current: false\n  }, {\n    name: 'Performance',\n    href: '/student/academic-performance',\n    icon: ChartBarIcon,\n    current: true\n  }, {\n    name: 'Leaderboard',\n    href: '/student/leaderboard',\n    icon: TrophyIcon,\n    current: false\n  }, {\n    name: 'Notes',\n    href: '/student/notes',\n    icon: BookOpenIcon,\n    current: false\n  }, {\n    name: 'Announcements',\n    href: '/student/announcements',\n    icon: BellIcon,\n    current: false\n  }, {\n    name: 'Profile',\n    href: '/student/profile',\n    icon: CogIcon,\n    current: false\n  }];\n  const getGradeColor = percentage => {\n    if (percentage >= 90) return 'text-green-600 bg-green-50';\n    if (percentage >= 80) return 'text-blue-600 bg-blue-50';\n    if (percentage >= 70) return 'text-yellow-600 bg-yellow-50';\n    if (percentage >= 60) return 'text-orange-600 bg-orange-50';\n    return 'text-red-600 bg-red-50';\n  };\n  const getPerformanceLevel = percentage => {\n    if (percentage >= 90) return {\n      level: 'Excellent',\n      emoji: '\uD83C\uDF1F'\n    };\n    if (percentage >= 80) return {\n      level: 'Good',\n      emoji: '\uD83D\uDC4D'\n    };\n    if (percentage >= 70) return {\n      level: 'Average',\n      emoji: '\uD83D\uDC4C'\n    };\n    if (percentage >= 60) return {\n      level: 'Below Average',\n      emoji: '\uD83D\uDCC8'\n    };\n    return {\n      level: 'Needs Improvement',\n      emoji: '\uD83D\uDCDA'\n    };\n  };\n  const performanceLevel = getPerformanceLevel(overallPercentage);\n  return <div className=\"min-h-screen bg-gray-50 flex\">\r\n      {/* Right Navigation Bar */}\r\n      <div className=\"fixed right-0 top-0 h-full w-72 bg-slate-800 shadow-2xl transform translate-x-full lg:translate-x-0 transition-transform duration-300 ease-in-out z-40 lg:z-30\">\r\n        <div className=\"flex flex-col h-full\">\r\n          <div className=\"p-6 border-b border-slate-700\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h2 className=\"text-xl font-bold text-white\">EduHub</h2>\r\n                <p className=\"text-sm text-slate-300\">Student Portal</p>\r\n              </div>\r\n              <button onClick={() => setIsMobileMenuOpen(false)} className=\"lg:hidden text-slate-300 hover:text-white\">\r\n                <XMarkIcon className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex-1 px-4 py-6 overflow-y-auto\">\r\n            <nav className=\"space-y-2\">\r\n              {navigation.map(item => {\n              const IconComponent = item.icon;\n              return <Link key={item.name} to={item.href} className={`flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors ${item.current ? 'bg-slate-700 text-white' : 'text-slate-300 hover:bg-slate-700 hover:text-white'}`}>\r\n                    <IconComponent className=\"mr-3 h-5 w-5\" />\r\n                    <span>{item.name}</span>\r\n                  </Link>;\n            })}\r\n              \r\n              {/* Logout Button */}\r\n              <button onClick={handleLogout} className=\"w-full flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors text-slate-300 hover:bg-red-600 hover:text-white mt-4\">\r\n                <ArrowRightOnRectangleIcon className=\"mr-3 h-5 w-5\" />\r\n                <span>Logout</span>\r\n              </button>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile menu overlay */}\r\n      {isMobileMenuOpen && <div className=\"fixed inset-0 z-50 lg:hidden\">\r\n          <div className=\"absolute inset-0 bg-gray-600 bg-opacity-75\" onClick={() => setIsMobileMenuOpen(false)}></div>\r\n          <div className=\"relative ml-auto h-full w-72 bg-slate-800 shadow-2xl\">\r\n            <div className=\"flex flex-col h-full\">\r\n              <div className=\"p-6 border-b border-slate-700\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <h2 className=\"text-xl font-bold text-white\">EduHub</h2>\r\n                    <p className=\"text-sm text-slate-300\">Student Portal</p>\r\n                  </div>\r\n                  <button onClick={() => setIsMobileMenuOpen(false)} className=\"text-slate-300 hover:text-white\">\r\n                    <XMarkIcon className=\"h-6 w-6\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex-1 px-4 py-6 overflow-y-auto\">\r\n                <nav className=\"space-y-2\">\r\n                  {navigation.map(item => {\n                const IconComponent = item.icon;\n                return <Link key={item.name} to={item.href} className={`flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors ${item.current ? 'bg-slate-700 text-white' : 'text-slate-300 hover:bg-slate-700 hover:text-white'}`} onClick={() => setIsMobileMenuOpen(false)}>\r\n                        <IconComponent className=\"mr-3 h-5 w-5\" />\r\n                        <span>{item.name}</span>\r\n                      </Link>;\n              })}\r\n                  \r\n                  {/* Mobile Logout Button */}\r\n                  <button onClick={() => {\n                setIsMobileMenuOpen(false);\n                handleLogout();\n              }} className=\"w-full flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors text-slate-300 hover:bg-red-600 hover:text-white mt-4\">\r\n                    <ArrowRightOnRectangleIcon className=\"mr-3 h-5 w-5\" />\r\n                    <span>Logout</span>\r\n                  </button>\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 lg:mr-72\">\r\n        <div className=\"lg:hidden bg-white shadow-sm border-b border-gray-200 px-4 py-3 flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-lg font-semibold text-gray-900\">Academic Performance</h1>\r\n          </div>\r\n          <button onClick={() => setIsMobileMenuOpen(true)} className=\"text-gray-500 hover:text-gray-700\">\r\n            <Bars3Icon className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          <div className=\"mb-8\">\r\n            <h1 className=\"text-3xl font-bold text-gray-900 hidden lg:block\">\uD83D\uDCCA Academic Performance</h1>\r\n            <p className=\"text-gray-600 mt-2\">Track your academic progress and performance metrics</p>\r\n          </div>\r\n\r\n          {/* Performance Overview */}\r\n          <div className=\"bg-gradient-to-r from-purple-600 to-blue-600 rounded-lg shadow-lg p-6 text-white mb-8\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h2 className=\"text-2xl font-bold\">{performanceLevel.emoji} Overall Performance</h2>\r\n                <p className=\"text-purple-100\">Current Academic Standing</p>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <div className=\"text-4xl font-bold\">{overallPercentage}%</div>\r\n                <div className=\"text-purple-100\">{performanceLevel.level}</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div className=\"bg-white bg-opacity-20 rounded-lg p-4\">\r\n                <div className=\"flex items-center\">\r\n                  <DocumentTextIcon className=\"h-8 w-8 mr-3\" />\r\n                  <div>\r\n                    <div className=\"text-2xl font-bold\">{totalAssignments}</div>\r\n                    <div className=\"text-sm text-purple-100\">Total Assignments</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"bg-white bg-opacity-20 rounded-lg p-4\">\r\n                <div className=\"flex items-center\">\r\n                  <StarIcon className=\"h-8 w-8 mr-3\" />\r\n                  <div>\r\n                    <div className=\"text-2xl font-bold\">{totalEarned}</div>\r\n                    <div className=\"text-sm text-purple-100\">Points Earned</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"bg-white bg-opacity-20 rounded-lg p-4\">\r\n                <div className=\"flex items-center\">\r\n                  <ChartPieIcon className=\"h-8 w-8 mr-3\" />\r\n                  <div>\r\n                    <div className=\"text-2xl font-bold\">{totalPoints}</div>\r\n                    <div className=\"text-sm text-purple-100\">Total Points</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Monthly Performance Chart */}\r\n          <div className=\"bg-white shadow rounded-lg mb-8\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">\uD83D\uDCC8 Monthly Performance Trend</h3>\r\n              <p className=\"text-sm text-gray-500\">Your performance over the last 6 months</p>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <div className=\"flex items-end justify-between h-64\">\r\n                {last6Months.map((month, index) => {\n                const height = month.percentage > 0 ? Math.max(month.percentage / 100 * 200, 20) : 20;\n                return <div key={index} className=\"flex flex-col items-center flex-1 mx-2\">\r\n                      <div className={`w-full max-w-12 rounded-t-lg ${month.percentage >= 80 ? 'bg-green-500' : month.percentage >= 60 ? 'bg-blue-500' : month.percentage >= 40 ? 'bg-yellow-500' : 'bg-red-500'}`} style={{\n                    height: `${height}px`\n                  }} title={`${month.monthName}: ${month.percentage}%`}></div>\r\n                      <span className=\"text-xs text-gray-600 mt-2 transform -rotate-45 origin-center\">\r\n                        {month.monthName}\r\n                      </span>\r\n                      <span className=\"text-xs font-semibold text-gray-700 mt-1\">\r\n                        {month.percentage}%\r\n                      </span>\r\n                    </div>;\n              })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Course Performance */}\r\n          <div className=\"bg-white shadow rounded-lg\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">\uD83D\uDCDA Course Performance</h3>\r\n              <p className=\"text-sm text-gray-500\">Detailed performance breakdown by course</p>\r\n            </div>\r\n            <div className=\"divide-y divide-gray-200\">\r\n              {Object.values(performanceData).map((course, index) => <div key={index} className=\"px-6 py-4\">\r\n                  <div className=\"flex items-center justify-between mb-3\">\r\n                    <div className=\"flex items-center\">\r\n                      <AcademicCapIcon className=\"h-6 w-6 text-blue-500 mr-3\" />\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-gray-900\">{course.courseName}</h4>\r\n                        <p className=\"text-sm text-gray-500\">{course.completedAssignments} assignments completed</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <span className={`inline-flex px-3 py-1 rounded-full text-sm font-medium ${getGradeColor(course.averageScore)}`}>\r\n                        {course.averageScore}%\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"w-full bg-gray-200 rounded-full h-2 mb-3\">\r\n                    <div className={`h-2 rounded-full ${course.averageScore >= 80 ? 'bg-green-500' : course.averageScore >= 60 ? 'bg-blue-500' : course.averageScore >= 40 ? 'bg-yellow-500' : 'bg-red-500'}`} style={{\n                  width: `${course.averageScore}%`\n                }}></div>\r\n                  </div>\r\n                  \r\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n                    <div>\r\n                      <span className=\"text-gray-500\">Points Earned</span>\r\n                      <p className=\"font-semibold\">{course.earnedPoints}/{course.totalPoints}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"text-gray-500\">Assignments</span>\r\n                      <p className=\"font-semibold\">{course.completedAssignments}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"text-gray-500\">Average Score</span>\r\n                      <p className=\"font-semibold\">{course.averageScore}%</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"text-gray-500\">Performance</span>\r\n                      <p className=\"font-semibold\">{getPerformanceLevel(course.averageScore).level}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\n}\n_s(StudentAcademicPerformance, \"8z6Ab45C24TYFBG23YiYH0yN29M=\", false, function () {\n  return [useLoaderData, useNavigate];\n});\n_c = StudentAcademicPerformance;\nvar _c;\n$RefreshReg$(_c, \"StudentAcademicPerformance\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
