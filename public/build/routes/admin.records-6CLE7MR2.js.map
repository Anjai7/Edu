{
  "version": 3,
  "sources": ["../../../app/routes/admin.records.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\admin.records.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\admin.records.tsx\");\n  import.meta.hot.lastModified = \"1757758895737.0244\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { PlusIcon, AcademicCapIcon, XMarkIcon, Bars3Icon } from \"@heroicons/react/24/outline\";\nimport { createSupabaseServerClient } from \"~/lib/supabase.server\";\nexport const meta = () => {\n  return [{\n    title: \"Student Records - EduHub Admin\"\n  }, {\n    name: \"description\",\n    content: \"View and manage student academic records\"\n  }];\n};\nexport async function loader({\n  request\n}) {\n  const supabase = createSupabaseServerClient(request);\n  const [{\n    data: students,\n    error: studentsError\n  }, {\n    data: courses,\n    error: coursesError\n  }] = await Promise.all([supabase.from('users').select('*').eq('role', 'student').order('full_name'), supabase.from('courses').select('*').order('name')]);\n\n  // Get student records with grades\n  const {\n    data: records,\n    error: recordsError\n  } = await supabase.from('submissions').select(`\n      *,\n      assignments (title, max_points, course_id),\n      users (full_name, email),\n      courses (name)\n    `).not('grade', 'is', null).order('created_at', {\n    ascending: false\n  });\n  if (studentsError) console.error('Error loading students:', studentsError);\n  if (coursesError) console.error('Error loading courses:', coursesError);\n  if (recordsError) console.error('Error loading records:', recordsError);\n  return json({\n    students: students || [],\n    courses: courses || [],\n    records: records || []\n  });\n}\nexport async function action({\n  request\n}) {\n  const supabase = createSupabaseServerClient(request);\n  const formData = await request.formData();\n  const intent = formData.get('intent');\n  if (intent === 'add_record') {\n    const student_id = formData.get('student_id');\n    const course_id = formData.get('course_id');\n    const title = formData.get('title');\n    const description = formData.get('description');\n    const grade = formData.get('grade');\n    const points = formData.get('points');\n\n    // Create a manual record entry\n    const {\n      data: record,\n      error\n    } = await supabase.from('submissions').insert({\n      student_id: parseInt(student_id),\n      assignment_id: null,\n      // Manual record\n      content: description,\n      grade: parseFloat(grade),\n      points_earned: parseInt(points),\n      status: 'graded',\n      submitted_at: new Date().toISOString()\n    }).select().single();\n    if (error) {\n      return json({\n        error: error.message\n      }, {\n        status: 400\n      });\n    }\n\n    // Create announcement\n    await supabase.from('announcements').insert({\n      title: `New Record Added: ${title}`,\n      content: `A new academic record \"${title}\" has been added to your profile.`,\n      type: 'record',\n      priority: 'low',\n      target_audience: 'students',\n      created_by: 1 // Admin user\n    });\n    return json({\n      success: true,\n      record\n    });\n  }\n  return json({\n    error: 'Invalid action'\n  }, {\n    status: 400\n  });\n}\nexport default function AdminRecords() {\n  _s();\n  const {\n    students,\n    courses,\n    records\n  } = useLoaderData();\n  const actionData = useActionData();\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const navigation = [{\n    name: 'Dashboard',\n    href: '/admin/dashboard'\n  }, {\n    name: 'Assignments',\n    href: '/admin/assignments'\n  }, {\n    name: 'Records',\n    href: '/admin/records',\n    current: true\n  }, {\n    name: 'Homework',\n    href: '/admin/homework'\n  }, {\n    name: 'Exams',\n    href: '/admin/exams'\n  }, {\n    name: 'Events',\n    href: '/admin/events'\n  }, {\n    name: 'Leaderboard',\n    href: '/admin/leaderboard'\n  }];\n  return <div className=\"min-h-screen bg-gray-50 flex\">\r\n      {/* Navigation - Same as assignments */}\r\n      <div className=\"fixed right-0 top-0 h-full w-72 bg-slate-800 shadow-2xl transform translate-x-full lg:translate-x-0 transition-transform duration-300 ease-in-out z-40 lg:z-30\">\r\n        <div className=\"flex flex-col h-full\">\r\n          <div className=\"p-6 border-b border-slate-700\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h2 className=\"text-xl font-bold text-white\">EduHub</h2>\r\n                <p className=\"text-sm text-slate-300\">Admin Portal</p>\r\n              </div>\r\n              <button onClick={() => setIsMobileMenuOpen(false)} className=\"lg:hidden text-slate-300 hover:text-white\">\r\n                <XMarkIcon className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex-1 px-4 py-6 overflow-y-auto\">\r\n            <nav className=\"space-y-2\">\r\n              {navigation.map(item => <Link key={item.name} to={item.href} className={`flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors ${item.current ? 'bg-slate-700 text-white' : 'text-slate-300 hover:bg-slate-700 hover:text-white'}`}>\r\n                  <AcademicCapIcon className=\"mr-3 h-5 w-5\" />\r\n                  <span>{item.name}</span>\r\n                </Link>)}\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile menu - Same structure */}\r\n      {isMobileMenuOpen && <div className=\"fixed inset-0 z-50 lg:hidden\">\r\n          <div className=\"absolute inset-0 bg-gray-600 bg-opacity-75\" onClick={() => setIsMobileMenuOpen(false)}></div>\r\n          <div className=\"relative ml-auto h-full w-72 bg-slate-800 shadow-2xl\">\r\n            <div className=\"flex flex-col h-full\">\r\n              <div className=\"p-6 border-b border-slate-700\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <h2 className=\"text-xl font-bold text-white\">EduHub</h2>\r\n                    <p className=\"text-sm text-slate-300\">Admin Portal</p>\r\n                  </div>\r\n                  <button onClick={() => setIsMobileMenuOpen(false)} className=\"text-slate-300 hover:text-white\">\r\n                    <XMarkIcon className=\"h-6 w-6\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex-1 px-4 py-6 overflow-y-auto\">\r\n                <nav className=\"space-y-2\">\r\n                  {navigation.map(item => <Link key={item.name} to={item.href} className={`flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors ${item.current ? 'bg-slate-700 text-white' : 'text-slate-300 hover:bg-slate-700 hover:text-white'}`} onClick={() => setIsMobileMenuOpen(false)}>\r\n                      <AcademicCapIcon className=\"mr-3 h-5 w-5\" />\r\n                      <span>{item.name}</span>\r\n                    </Link>)}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 lg:mr-72\">\r\n        <div className=\"lg:hidden bg-white shadow-sm border-b border-gray-200 px-4 py-3 flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-lg font-semibold text-gray-900\">Student Records</h1>\r\n          </div>\r\n          <button onClick={() => setIsMobileMenuOpen(true)} className=\"text-gray-500 hover:text-gray-700\">\r\n            <Bars3Icon className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          <div className=\"flex justify-between items-center mb-8\">\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold text-gray-900 hidden lg:block\">Student Records</h1>\r\n              <p className=\"text-gray-600 mt-2\">View and manage student academic records</p>\r\n            </div>\r\n            <button onClick={() => setShowAddForm(true)} className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg flex items-center\">\r\n              <PlusIcon className=\"h-5 w-5 mr-2\" />\r\n              Add Record\r\n            </button>\r\n          </div>\r\n\r\n          {/* Messages */}\r\n          {actionData?.error && <div className=\"mb-4 bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-lg\">\r\n              {actionData.error}\r\n            </div>}\r\n          {actionData?.success && <div className=\"mb-4 bg-green-50 border border-green-200 text-green-600 px-4 py-3 rounded-lg\">\r\n              Record added successfully!\r\n            </div>}\r\n\r\n          {/* Add Record Form */}\r\n          {showAddForm && <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\r\n              <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-4\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <h3 className=\"text-lg font-semibold\">Add Student Record</h3>\r\n                  <button onClick={() => setShowAddForm(false)} className=\"text-gray-400 hover:text-gray-600\">\r\n                    <XMarkIcon className=\"h-6 w-6\" />\r\n                  </button>\r\n                </div>\r\n\r\n                <Form method=\"post\" className=\"space-y-4\">\r\n                  <input type=\"hidden\" name=\"intent\" value=\"add_record\" />\r\n                  \r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Student\r\n                    </label>\r\n                    <select name=\"student_id\" required className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\">\r\n                      <option value=\"\">Select a student</option>\r\n                      {students.map(student => <option key={student.id} value={student.id}>\r\n                          {student.full_name}\r\n                        </option>)}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Course\r\n                    </label>\r\n                    <select name=\"course_id\" required className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\">\r\n                      <option value=\"\">Select a course</option>\r\n                      {courses.map(course => <option key={course.id} value={course.id}>\r\n                          {course.name}\r\n                        </option>)}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Record Title\r\n                    </label>\r\n                    <input type=\"text\" name=\"title\" required className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\" placeholder=\"e.g. Midterm Exam, Project Submission\" />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Description\r\n                    </label>\r\n                    <textarea name=\"description\" rows={3} className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\" />\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        Grade (%)\r\n                      </label>\r\n                      <input type=\"number\" name=\"grade\" min=\"0\" max=\"100\" step=\"0.1\" required className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\" />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        Points\r\n                      </label>\r\n                      <input type=\"number\" name=\"points\" min=\"0\" required className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex space-x-3 pt-4\">\r\n                    <button type=\"submit\" className=\"flex-1 bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded-md\">\r\n                      Add Record\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => setShowAddForm(false)} className=\"flex-1 bg-gray-300 hover:bg-gray-400 text-gray-700 py-2 px-4 rounded-md\">\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>}\r\n\r\n          {/* Records List */}\r\n          <div className=\"bg-white shadow rounded-lg\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">All Records</h3>\r\n            </div>\r\n            <div className=\"divide-y divide-gray-200\">\r\n              {records.length === 0 ? <div className=\"p-6 text-center text-gray-500\">\r\n                  No records found. Click \"Add Record\" to get started.\r\n                </div> : records.map(record => <div key={record.id} className=\"p-6 hover:bg-gray-50\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center\">\r\n                          <AcademicCapIcon className=\"h-5 w-5 text-gray-400 mr-3\" />\r\n                          <div>\r\n                            <h4 className=\"text-lg font-medium text-gray-900\">\r\n                              {record.assignments?.title || 'Manual Record'}\r\n                            </h4>\r\n                            <p className=\"text-sm text-gray-500\">\r\n                              {record.users?.full_name} \u2022 {record.courses?.name}\r\n                            </p>\r\n                            {record.content && <p className=\"text-gray-600 mt-1\">{record.content}</p>}\r\n                            <div className=\"flex items-center mt-2 text-sm text-gray-500\">\r\n                              <span>Grade: {record.grade}%</span>\r\n                              <span className=\"mx-2\">\u2022</span>\r\n                              <span>Points: {record.points_earned}</span>\r\n                              <span className=\"mx-2\">\u2022</span>\r\n                              <span>{new Date(record.created_at).toLocaleDateString()}</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className={`px-3 py-1 rounded-full text-sm font-medium ${record.grade >= 90 ? 'bg-green-100 text-green-800' : record.grade >= 80 ? 'bg-blue-100 text-blue-800' : record.grade >= 70 ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800'}`}>\r\n                          {record.grade >= 90 ? 'A' : record.grade >= 80 ? 'B' : record.grade >= 70 ? 'C' : 'D'}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\n}\n_s(AdminRecords, \"10TjX6lWIlUarTxqY0uJs8WvTUQ=\", false, function () {\n  return [useLoaderData, useActionData];\n});\n_c = AdminRecords;\nvar _c;\n$RefreshReg$(_c, \"AdminRecords\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
