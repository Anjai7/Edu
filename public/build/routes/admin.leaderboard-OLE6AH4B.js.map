{
  "version": 3,
  "sources": ["../../../app/routes/admin.leaderboard.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\admin.leaderboard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\admin.leaderboard.tsx\");\n  import.meta.hot.lastModified = \"1757761248042.6592\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport { json } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { ChartBarIcon, TrophyIcon, XMarkIcon, Bars3Icon, HomeIcon, DocumentTextIcon, AcademicCapIcon, BookOpenIcon, CalendarDaysIcon } from \"@heroicons/react/24/outline\";\nimport { createSupabaseServerClient } from \"~/lib/supabase.server\";\nexport const meta = () => {\n  return [{\n    title: \"Leaderboard - EduHub Admin\"\n  }, {\n    name: \"description\",\n    content: \"View student rankings based on points\"\n  }];\n};\nexport async function loader({\n  request\n}) {\n  const supabase = createSupabaseServerClient(request);\n\n  // Try to get leaderboard from view first, fallback to manual calculation\n  let {\n    data: leaderboard,\n    error\n  } = await supabase.from('student_leaderboard').select('*').order('total_points', {\n    ascending: false\n  }).limit(50);\n\n  // If view doesn't exist, calculate manually\n  if (error || !leaderboard || leaderboard.length === 0) {\n    const {\n      data: submissions\n    } = await supabase.from('submissions').select(`\n        student_id,\n        points_earned,\n        users!submissions_student_id_fkey (\n          full_name,\n          email,\n          avatar_url\n        )\n      `).not('points_earned', 'is', null);\n\n    // Group by student and sum points\n    const studentPoints = new Map();\n    submissions?.forEach(submission => {\n      const studentId = submission.student_id;\n      const currentPoints = studentPoints.get(studentId) || {\n        student_id: studentId,\n        full_name: submission.users?.full_name || 'Unknown',\n        email: submission.users?.email || '',\n        avatar_url: submission.users?.avatar_url || null,\n        total_points: 0\n      };\n      currentPoints.total_points += submission.points_earned || 0;\n      studentPoints.set(studentId, currentPoints);\n    });\n    leaderboard = Array.from(studentPoints.values()).sort((a, b) => b.total_points - a.total_points);\n  }\n  return json({\n    leaderboard: leaderboard || []\n  });\n}\nexport default function AdminLeaderboard() {\n  _s();\n  const {\n    leaderboard\n  } = useLoaderData();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const navigation = [{\n    name: 'Dashboard',\n    href: '/admin/dashboard',\n    icon: HomeIcon,\n    current: false\n  }, {\n    name: 'Assignments',\n    href: '/admin/assignments',\n    icon: DocumentTextIcon,\n    current: false\n  }, {\n    name: 'Records',\n    href: '/admin/records',\n    icon: AcademicCapIcon,\n    current: false\n  }, {\n    name: 'Homework',\n    href: '/admin/homework',\n    icon: BookOpenIcon,\n    current: false\n  }, {\n    name: 'Exams',\n    href: '/admin/exams',\n    icon: DocumentTextIcon,\n    current: false\n  }, {\n    name: 'Events',\n    href: '/admin/events',\n    icon: CalendarDaysIcon,\n    current: false\n  }, {\n    name: 'Leaderboard',\n    href: '/admin/leaderboard',\n    icon: ChartBarIcon,\n    current: true\n  }];\n  const getRankColor = position => {\n    if (position === 1) return 'text-yellow-600 bg-yellow-50';\n    if (position === 2) return 'text-gray-600 bg-gray-50';\n    if (position === 3) return 'text-orange-600 bg-orange-50';\n    return 'text-blue-600 bg-blue-50';\n  };\n  const getRankIcon = position => {\n    if (position <= 3) {\n      return <TrophyIcon className={`h-5 w-5 ${position === 1 ? 'text-yellow-500' : position === 2 ? 'text-gray-500' : 'text-orange-500'}`} />;\n    }\n    return null;\n  };\n  return <div className=\"min-h-screen bg-gray-50 flex\">\r\n      {/* Right Navigation Bar */}\r\n      <div className=\"fixed right-0 top-0 h-full w-72 bg-slate-800 shadow-2xl transform translate-x-full lg:translate-x-0 transition-transform duration-300 ease-in-out z-40 lg:z-30\">\r\n        <div className=\"flex flex-col h-full\">\r\n          <div className=\"p-6 border-b border-slate-700\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h2 className=\"text-xl font-bold text-white\">EduHub</h2>\r\n                <p className=\"text-sm text-slate-300\">Admin Portal</p>\r\n              </div>\r\n              <button onClick={() => setIsMobileMenuOpen(false)} className=\"lg:hidden text-slate-300 hover:text-white\">\r\n                <XMarkIcon className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex-1 px-4 py-6 overflow-y-auto\">\r\n            <nav className=\"space-y-2\">\r\n              {navigation.map(item => {\n              const IconComponent = item.icon;\n              return <Link key={item.name} to={item.href} className={`flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors ${item.current ? 'bg-slate-700 text-white' : 'text-slate-300 hover:bg-slate-700 hover:text-white'}`}>\r\n                    <IconComponent className=\"mr-3 h-5 w-5\" />\r\n                    <span>{item.name}</span>\r\n                  </Link>;\n            })}\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile menu overlay */}\r\n      {isMobileMenuOpen && <div className=\"fixed inset-0 z-50 lg:hidden\">\r\n          <div className=\"absolute inset-0 bg-gray-600 bg-opacity-75\" onClick={() => setIsMobileMenuOpen(false)}></div>\r\n          <div className=\"relative ml-auto h-full w-72 bg-slate-800 shadow-2xl\">\r\n            <div className=\"flex flex-col h-full\">\r\n              <div className=\"p-6 border-b border-slate-700\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <h2 className=\"text-xl font-bold text-white\">EduHub</h2>\r\n                    <p className=\"text-sm text-slate-300\">Admin Portal</p>\r\n                  </div>\r\n                  <button onClick={() => setIsMobileMenuOpen(false)} className=\"text-slate-300 hover:text-white\">\r\n                    <XMarkIcon className=\"h-6 w-6\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex-1 px-4 py-6 overflow-y-auto\">\r\n                <nav className=\"space-y-2\">\r\n                  {navigation.map(item => {\n                const IconComponent = item.icon;\n                return <Link key={item.name} to={item.href} className={`flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors ${item.current ? 'bg-slate-700 text-white' : 'text-slate-300 hover:bg-slate-700 hover:text-white'}`} onClick={() => setIsMobileMenuOpen(false)}>\r\n                        <IconComponent className=\"mr-3 h-5 w-5\" />\r\n                        <span>{item.name}</span>\r\n                      </Link>;\n              })}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 lg:mr-72\">\r\n        <div className=\"lg:hidden bg-white shadow-sm border-b border-gray-200 px-4 py-3 flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-lg font-semibold text-gray-900\">Leaderboard</h1>\r\n          </div>\r\n          <button onClick={() => setIsMobileMenuOpen(true)} className=\"text-gray-500 hover:text-gray-700\">\r\n            <Bars3Icon className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          <div className=\"mb-8\">\r\n            <h1 className=\"text-3xl font-bold text-gray-900 hidden lg:block\">Student Leaderboard</h1>\r\n            <p className=\"text-gray-600 mt-2\">Rankings based on points earned from assignments and activities</p>\r\n          </div>\r\n\r\n          {/* Top 3 Students */}\r\n          {leaderboard.length >= 3 && <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\r\n              {leaderboard.slice(0, 3).map((student, index) => <div key={student.student_id} className={`relative bg-white rounded-lg shadow-lg overflow-hidden ${index === 0 ? 'ring-4 ring-yellow-400' : index === 1 ? 'ring-4 ring-gray-400' : 'ring-4 ring-orange-400'}`}>\r\n                  <div className={`absolute top-0 left-0 right-0 h-2 ${index === 0 ? 'bg-yellow-400' : index === 1 ? 'bg-gray-400' : 'bg-orange-400'}`}></div>\r\n                  <div className=\"p-6 text-center\">\r\n                    <div className=\"flex justify-center mb-4\">\r\n                      {getRankIcon(index + 1)}\r\n                    </div>\r\n                    <div className=\"w-16 h-16 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center\">\r\n                      {student.avatar_url ? <img src={student.avatar_url} alt={student.full_name} className=\"w-full h-full rounded-full object-cover\" /> : <span className=\"text-xl font-bold text-gray-600\">\r\n                          {student.full_name?.charAt(0) || '?'}\r\n                        </span>}\r\n                    </div>\r\n                    <h3 className=\"text-lg font-semibold text-gray-900\">{student.full_name}</h3>\r\n                    <p className=\"text-sm text-gray-500\">{student.email}</p>\r\n                    <div className={`mt-3 inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${getRankColor(index + 1)}`}>\r\n                      <span className=\"mr-1\">#</span>\r\n                      <span>{index + 1}</span>\r\n                    </div>\r\n                    <p className=\"text-2xl font-bold text-gray-900 mt-2\">{student.total_points} pts</p>\r\n                  </div>\r\n                </div>)}\r\n            </div>}\r\n\r\n          {/* Full Leaderboard Table */}\r\n          <div className=\"bg-white shadow rounded-lg\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">Full Rankings</h3>\r\n            </div>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Rank\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Student\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Points\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Grade\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {leaderboard.length === 0 ? <tr>\r\n                      <td colSpan={4} className=\"px-6 py-8 text-center text-gray-500\">\r\n                        No student data available yet.\r\n                      </td>\r\n                    </tr> : leaderboard.map((student, index) => {\n                  const position = index + 1;\n                  return <tr key={student.student_id} className=\"hover:bg-gray-50\">\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <div className=\"flex items-center\">\r\n                              <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getRankColor(position)}`}>\r\n                                #{position}\r\n                              </span>\r\n                              {getRankIcon(position) && <div className=\"ml-2\">\r\n                                  {getRankIcon(position)}\r\n                                </div>}\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <div className=\"flex items-center\">\r\n                              <div className=\"w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center mr-4\">\r\n                                {student.avatar_url ? <img src={student.avatar_url} alt={student.full_name} className=\"w-full h-full rounded-full object-cover\" /> : <span className=\"text-sm font-medium text-gray-600\">\r\n                                    {student.full_name?.charAt(0) || '?'}\r\n                                  </span>}\r\n                              </div>\r\n                              <div>\r\n                                <div className=\"text-sm font-medium text-gray-900\">{student.full_name}</div>\r\n                                <div className=\"text-sm text-gray-500\">{student.email}</div>\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <div className=\"text-sm font-medium text-gray-900\">{student.total_points}</div>\r\n                            <div className=\"text-sm text-gray-500\">points</div>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${student.total_points >= 90 ? 'bg-green-100 text-green-800' : student.total_points >= 80 ? 'bg-blue-100 text-blue-800' : student.total_points >= 70 ? 'bg-yellow-100 text-yellow-800' : student.total_points >= 60 ? 'bg-orange-100 text-orange-800' : 'bg-red-100 text-red-800'}`}>\r\n                              {student.total_points >= 90 ? 'A+' : student.total_points >= 80 ? 'A' : student.total_points >= 70 ? 'B' : student.total_points >= 60 ? 'C' : 'D'}\r\n                            </span>\r\n                          </td>\r\n                        </tr>;\n                })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\n}\n_s(AdminLeaderboard, \"uhCfpk5H6wXIOXZZ/xU6qEqTOoo=\", false, function () {\n  return [useLoaderData];\n});\n_c = AdminLeaderboard;\nvar _c;\n$RefreshReg$(_c, \"AdminLeaderboard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
