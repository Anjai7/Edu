{
  "version": 3,
  "sources": ["../../../app/routes/wellness.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\wellness.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\wellness.tsx\");\n  import.meta.hot.lastModified = \"1757753877155.3474\";\n}\n// REMIX HMR END\n\nimport { useState } from \"react\";\nimport { Button } from \"~/components/Button\";\nexport const meta = () => {\n  return [{\n    title: \"Wellness Tracker - EduHub\"\n  }, {\n    name: \"description\",\n    content: \"Monitor your mental health and academic stress\"\n  }];\n};\nexport default function Wellness() {\n  _s();\n  const [todayEntry, setTodayEntry] = useState({\n    mood: 7,\n    stress: 4,\n    sleep: 7.5,\n    exercise: 30,\n    notes: \"\"\n  });\n  const [weeklyData] = useState([{\n    date: \"Mon\",\n    mood: 6,\n    stress: 6,\n    sleep: 6,\n    exercise: 0\n  }, {\n    date: \"Tue\",\n    mood: 7,\n    stress: 5,\n    sleep: 7,\n    exercise: 30\n  }, {\n    date: \"Wed\",\n    mood: 8,\n    stress: 3,\n    sleep: 8,\n    exercise: 45\n  }, {\n    date: \"Thu\",\n    mood: 6,\n    stress: 7,\n    sleep: 6,\n    exercise: 0\n  }, {\n    date: \"Fri\",\n    mood: 9,\n    stress: 2,\n    sleep: 8,\n    exercise: 60\n  }, {\n    date: \"Sat\",\n    mood: 8,\n    stress: 3,\n    sleep: 9,\n    exercise: 90\n  }, {\n    date: \"Sun\",\n    mood: 7,\n    stress: 4,\n    sleep: 7.5,\n    exercise: 30\n  }]);\n  const averages = {\n    mood: weeklyData.reduce((sum, day) => sum + day.mood, 0) / weeklyData.length,\n    stress: weeklyData.reduce((sum, day) => sum + day.stress, 0) / weeklyData.length,\n    sleep: weeklyData.reduce((sum, day) => sum + day.sleep, 0) / weeklyData.length,\n    exercise: weeklyData.reduce((sum, day) => sum + day.exercise, 0) / weeklyData.length\n  };\n  const getStressColor = level => {\n    if (level <= 3) return \"text-green-600\";\n    if (level <= 6) return \"text-yellow-600\";\n    return \"text-red-600\";\n  };\n  const getMoodColor = level => {\n    if (level >= 8) return \"text-green-600\";\n    if (level >= 6) return \"text-yellow-600\";\n    return \"text-red-600\";\n  };\n  return <div className=\"max-w-6xl mx-auto space-y-8\">\r\n      <div className=\"text-center\">\r\n        <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">Wellness Tracker</h1>\r\n        <p className=\"text-xl text-gray-600\">\r\n          Monitor your mental health and academic stress\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 text-center\">\r\n          <h3 className=\"text-lg font-semibold mb-2\">Average Mood</h3>\r\n          <div className={`text-3xl font-bold ${getMoodColor(averages.mood)}`}>\r\n            {averages.mood.toFixed(1)}/10\r\n          </div>\r\n          <p className=\"text-sm text-gray-500\">This week</p>\r\n        </div>\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 text-center\">\r\n          <h3 className=\"text-lg font-semibold mb-2\">Stress Level</h3>\r\n          <div className={`text-3xl font-bold ${getStressColor(averages.stress)}`}>\r\n            {averages.stress.toFixed(1)}/10\r\n          </div>\r\n          <p className=\"text-sm text-gray-500\">Average this week</p>\r\n        </div>\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 text-center\">\r\n          <h3 className=\"text-lg font-semibold mb-2\">Sleep Average</h3>\r\n          <div className=\"text-3xl font-bold text-blue-600\">\r\n            {averages.sleep.toFixed(1)}h\r\n          </div>\r\n          <p className=\"text-sm text-gray-500\">Per night</p>\r\n        </div>\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 text-center\">\r\n          <h3 className=\"text-lg font-semibold mb-2\">Exercise</h3>\r\n          <div className=\"text-3xl font-bold text-purple-600\">\r\n            {Math.round(averages.exercise)}min\r\n          </div>\r\n          <p className=\"text-sm text-gray-500\">Daily average</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n          <h3 className=\"text-xl font-semibold mb-4\">Today's Check-in</h3>\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Mood (1-10): {todayEntry.mood}\r\n              </label>\r\n              <input type=\"range\" min=\"1\" max=\"10\" value={todayEntry.mood} onChange={e => setTodayEntry({\n              ...todayEntry,\n              mood: parseInt(e.target.value)\n            })} className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\" />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Stress Level (1-10): {todayEntry.stress}\r\n              </label>\r\n              <input type=\"range\" min=\"1\" max=\"10\" value={todayEntry.stress} onChange={e => setTodayEntry({\n              ...todayEntry,\n              stress: parseInt(e.target.value)\n            })} className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\" />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Sleep Hours: {todayEntry.sleep}\r\n              </label>\r\n              <input type=\"range\" min=\"3\" max=\"12\" step=\"0.5\" value={todayEntry.sleep} onChange={e => setTodayEntry({\n              ...todayEntry,\n              sleep: parseFloat(e.target.value)\n            })} className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\" />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Exercise Minutes: {todayEntry.exercise}\r\n              </label>\r\n              <input type=\"range\" min=\"0\" max=\"120\" step=\"15\" value={todayEntry.exercise} onChange={e => setTodayEntry({\n              ...todayEntry,\n              exercise: parseInt(e.target.value)\n            })} className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\" />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Notes (optional)\r\n              </label>\r\n              <textarea value={todayEntry.notes} onChange={e => setTodayEntry({\n              ...todayEntry,\n              notes: e.target.value\n            })} placeholder=\"How are you feeling today? Any particular stressors?\" className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" rows={3} />\r\n            </div>\r\n            <Button variant=\"primary\" className=\"w-full\">\r\n              Save Today's Entry\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n          <h3 className=\"text-xl font-semibold mb-4\">Weekly Trends</h3>\r\n          <div className=\"space-y-4\">\r\n            {weeklyData.map((day, index) => <div key={index} className=\"flex items-center justify-between p-3 border border-gray-200 rounded-md\">\r\n                <div className=\"font-medium text-gray-700\">{day.date}</div>\r\n                <div className=\"flex items-center space-x-4 text-sm\">\r\n                  <span className={`font-medium ${getMoodColor(day.mood)}`}>\r\n                    Mood: {day.mood}\r\n                  </span>\r\n                  <span className={`font-medium ${getStressColor(day.stress)}`}>\r\n                    Stress: {day.stress}\r\n                  </span>\r\n                  <span className=\"text-blue-600\">\r\n                    Sleep: {day.sleep}h\r\n                  </span>\r\n                  <span className=\"text-purple-600\">\r\n                    Exercise: {day.exercise}min\r\n                  </span>\r\n                </div>\r\n              </div>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">Stress Management</h3>\r\n          <div className=\"space-y-3\">\r\n            <div className=\"p-3 border border-gray-200 rounded-md\">\r\n              <div className=\"font-medium text-sm\">Deep Breathing</div>\r\n              <div className=\"text-xs text-gray-500\">5-minute guided session</div>\r\n            </div>\r\n            <div className=\"p-3 border border-gray-200 rounded-md\">\r\n              <div className=\"font-medium text-sm\">Meditation</div>\r\n              <div className=\"text-xs text-gray-500\">10-minute mindfulness</div>\r\n            </div>\r\n            <div className=\"p-3 border border-gray-200 rounded-md\">\r\n              <div className=\"font-medium text-sm\">Take a Walk</div>\r\n              <div className=\"text-xs text-gray-500\">Get some fresh air</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">Academic Support</h3>\r\n          <div className=\"space-y-3\">\r\n            <div className=\"p-3 border border-gray-200 rounded-md\">\r\n              <div className=\"font-medium text-sm\">Counseling Services</div>\r\n              <div className=\"text-xs text-gray-500\">Free student support</div>\r\n            </div>\r\n            <div className=\"p-3 border border-gray-200 rounded-md\">\r\n              <div className=\"font-medium text-sm\">Study Groups</div>\r\n              <div className=\"text-xs text-gray-500\">Connect with peers</div>\r\n            </div>\r\n            <div className=\"p-3 border border-gray-200 rounded-md\">\r\n              <div className=\"font-medium text-sm\">Office Hours</div>\r\n              <div className=\"text-xs text-gray-500\">Get help from professors</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">Emergency Resources</h3>\r\n          <div className=\"space-y-3\">\r\n            <div className=\"p-3 border border-red-200 rounded-md bg-red-50\">\r\n              <div className=\"font-medium text-sm text-red-800\">Crisis Hotline</div>\r\n              <div className=\"text-xs text-red-600\">Available 24/7</div>\r\n            </div>\r\n            <div className=\"p-3 border border-gray-200 rounded-md\">\r\n              <div className=\"font-medium text-sm\">Campus Security</div>\r\n              <div className=\"text-xs text-gray-500\">Emergency assistance</div>\r\n            </div>\r\n            <div className=\"p-3 border border-gray-200 rounded-md\">\r\n              <div className=\"font-medium text-sm\">Health Center</div>\r\n              <div className=\"text-xs text-gray-500\">Medical support</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\n}\n_s(Wellness, \"f+H9qTATAk65jQoS/eKs/VhFBMQ=\");\n_c = Wellness;\nvar _c;\n$RefreshReg$(_c, \"Wellness\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
