{
  "version": 3,
  "sources": ["../../../app/routes/student.notes.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\student.notes.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\student.notes.tsx\");\n  import.meta.hot.lastModified = \"1757763834170.718\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Link, useLoaderData, useNavigate, useFetcher } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { BookOpenIcon, PlusIcon, PencilIcon, TrashIcon, MagnifyingGlassIcon, CalendarDaysIcon, XMarkIcon, Bars3Icon, HomeIcon, DocumentTextIcon, BellIcon, CogIcon, ArrowRightOnRectangleIcon, TrophyIcon, ChartBarIcon, TagIcon, StarIcon } from \"@heroicons/react/24/outline\";\nimport { createSupabaseServerClient } from \"~/lib/supabase.server\";\nexport const meta = () => {\n  return [{\n    title: \"Notes - EduHub Student\"\n  }, {\n    name: \"description\",\n    content: \"Manage your study notes and materials\"\n  }];\n};\nexport async function loader({\n  request\n}) {\n  const supabase = createSupabaseServerClient(request);\n\n  // For demo purposes, we'll use student ID 1\n  const currentStudentId = 1;\n\n  // Get all notes for the student\n  const {\n    data: notes\n  } = await supabase.from('notes').select(`\n      *,\n      courses(name)\n    `).eq('student_id', currentStudentId).order('created_at', {\n    ascending: false\n  });\n\n  // Get courses for dropdown\n  const {\n    data: courses\n  } = await supabase.from('courses').select('*').order('name');\n  return json({\n    notes: notes || [],\n    courses: courses || []\n  });\n}\nexport async function action({\n  request\n}) {\n  const supabase = createSupabaseServerClient(request);\n  const formData = await request.formData();\n  const intent = formData.get('intent');\n  const currentStudentId = 1; // For demo purposes\n\n  if (intent === 'create') {\n    const {\n      data,\n      error\n    } = await supabase.from('notes').insert({\n      student_id: currentStudentId,\n      title: formData.get('title'),\n      content: formData.get('content'),\n      course_id: formData.get('course_id') ? parseInt(formData.get('course_id')) : null,\n      tags: formData.get('tags') ? formData.get('tags').split(',').map(tag => tag.trim()) : [],\n      is_favorite: false\n    }).select();\n    if (error) {\n      return json({\n        error: error.message\n      }, {\n        status: 400\n      });\n    }\n    return json({\n      success: true,\n      note: data[0]\n    });\n  }\n  if (intent === 'update') {\n    const noteId = formData.get('noteId');\n    const {\n      data,\n      error\n    } = await supabase.from('notes').update({\n      title: formData.get('title'),\n      content: formData.get('content'),\n      course_id: formData.get('course_id') ? parseInt(formData.get('course_id')) : null,\n      tags: formData.get('tags') ? formData.get('tags').split(',').map(tag => tag.trim()) : []\n    }).eq('id', noteId).eq('student_id', currentStudentId).select();\n    if (error) {\n      return json({\n        error: error.message\n      }, {\n        status: 400\n      });\n    }\n    return json({\n      success: true,\n      note: data[0]\n    });\n  }\n  if (intent === 'delete') {\n    const noteId = formData.get('noteId');\n    const {\n      error\n    } = await supabase.from('notes').delete().eq('id', noteId).eq('student_id', currentStudentId);\n    if (error) {\n      return json({\n        error: error.message\n      }, {\n        status: 400\n      });\n    }\n    return json({\n      success: true\n    });\n  }\n  if (intent === 'favorite') {\n    const noteId = formData.get('noteId');\n    const isFavorite = formData.get('isFavorite') === 'true';\n    const {\n      error\n    } = await supabase.from('notes').update({\n      is_favorite: !isFavorite\n    }).eq('id', noteId).eq('student_id', currentStudentId);\n    if (error) {\n      return json({\n        error: error.message\n      }, {\n        status: 400\n      });\n    }\n    return json({\n      success: true\n    });\n  }\n  return json({\n    error: 'Invalid action'\n  }, {\n    status: 400\n  });\n}\nexport default function StudentNotes() {\n  _s();\n  const {\n    notes,\n    courses\n  } = useLoaderData();\n  const navigate = useNavigate();\n  const fetcher = useFetcher();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [editingNote, setEditingNote] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCourse, setSelectedCourse] = useState('all');\n  const [selectedTag, setSelectedTag] = useState('all');\n  const handleLogout = async () => {\n    try {\n      localStorage.removeItem('student_session');\n      sessionStorage.clear();\n      navigate('/', {\n        replace: true\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n      navigate('/', {\n        replace: true\n      });\n    }\n  };\n  const navigation = [{\n    name: 'Dashboard',\n    href: '/student/dashboard',\n    icon: HomeIcon,\n    current: false\n  }, {\n    name: 'Assignments',\n    href: '/student/assignments',\n    icon: DocumentTextIcon,\n    current: false\n  }, {\n    name: 'Attendance',\n    href: '/student/attendance',\n    icon: CalendarDaysIcon,\n    current: false\n  }, {\n    name: 'Performance',\n    href: '/student/academic-performance',\n    icon: ChartBarIcon,\n    current: false\n  }, {\n    name: 'Leaderboard',\n    href: '/student/leaderboard',\n    icon: TrophyIcon,\n    current: false\n  }, {\n    name: 'Notes',\n    href: '/student/notes',\n    icon: BookOpenIcon,\n    current: true\n  }, {\n    name: 'Announcements',\n    href: '/student/announcements',\n    icon: BellIcon,\n    current: false\n  }, {\n    name: 'Profile',\n    href: '/student/profile',\n    icon: CogIcon,\n    current: false\n  }];\n\n  // Filter notes based on search and filters\n  const filteredNotes = notes.filter(note => {\n    const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) || note.content.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCourse = selectedCourse === 'all' || note.course_id?.toString() === selectedCourse;\n    const matchesTag = selectedTag === 'all' || note.tags && note.tags.includes(selectedTag);\n    return matchesSearch && matchesCourse && matchesTag;\n  });\n\n  // Get all unique tags\n  const allTags = [...new Set(notes.flatMap(note => note.tags || []))];\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    if (editingNote) {\n      formData.append('intent', 'update');\n      formData.append('noteId', editingNote.id.toString());\n    } else {\n      formData.append('intent', 'create');\n    }\n    fetcher.submit(formData, {\n      method: 'post'\n    });\n    setShowCreateModal(false);\n    setEditingNote(null);\n  };\n  const handleDelete = noteId => {\n    if (confirm('Are you sure you want to delete this note?')) {\n      const formData = new FormData();\n      formData.append('intent', 'delete');\n      formData.append('noteId', noteId.toString());\n      fetcher.submit(formData, {\n        method: 'post'\n      });\n    }\n  };\n  const handleFavorite = (noteId, isFavorite) => {\n    const formData = new FormData();\n    formData.append('intent', 'favorite');\n    formData.append('noteId', noteId.toString());\n    formData.append('isFavorite', isFavorite.toString());\n    fetcher.submit(formData, {\n      method: 'post'\n    });\n  };\n  return <div className=\"min-h-screen bg-gray-50 flex\">\r\n      {/* Right Navigation Bar */}\r\n      <div className=\"fixed right-0 top-0 h-full w-72 bg-slate-800 shadow-2xl transform translate-x-full lg:translate-x-0 transition-transform duration-300 ease-in-out z-40 lg:z-30\">\r\n        <div className=\"flex flex-col h-full\">\r\n          <div className=\"p-6 border-b border-slate-700\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h2 className=\"text-xl font-bold text-white\">EduHub</h2>\r\n                <p className=\"text-sm text-slate-300\">Student Portal</p>\r\n              </div>\r\n              <button onClick={() => setIsMobileMenuOpen(false)} className=\"lg:hidden text-slate-300 hover:text-white\">\r\n                <XMarkIcon className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex-1 px-4 py-6 overflow-y-auto\">\r\n            <nav className=\"space-y-2\">\r\n              {navigation.map(item => {\n              const IconComponent = item.icon;\n              return <Link key={item.name} to={item.href} className={`flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors ${item.current ? 'bg-slate-700 text-white' : 'text-slate-300 hover:bg-slate-700 hover:text-white'}`}>\r\n                    <IconComponent className=\"mr-3 h-5 w-5\" />\r\n                    <span>{item.name}</span>\r\n                  </Link>;\n            })}\r\n              \r\n              {/* Logout Button */}\r\n              <button onClick={handleLogout} className=\"w-full flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors text-slate-300 hover:bg-red-600 hover:text-white mt-4\">\r\n                <ArrowRightOnRectangleIcon className=\"mr-3 h-5 w-5\" />\r\n                <span>Logout</span>\r\n              </button>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile menu overlay */}\r\n      {isMobileMenuOpen && <div className=\"fixed inset-0 z-50 lg:hidden\">\r\n          <div className=\"absolute inset-0 bg-gray-600 bg-opacity-75\" onClick={() => setIsMobileMenuOpen(false)}></div>\r\n          <div className=\"relative ml-auto h-full w-72 bg-slate-800 shadow-2xl\">\r\n            <div className=\"flex flex-col h-full\">\r\n              <div className=\"p-6 border-b border-slate-700\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <h2 className=\"text-xl font-bold text-white\">EduHub</h2>\r\n                    <p className=\"text-sm text-slate-300\">Student Portal</p>\r\n                  </div>\r\n                  <button onClick={() => setIsMobileMenuOpen(false)} className=\"text-slate-300 hover:text-white\">\r\n                    <XMarkIcon className=\"h-6 w-6\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex-1 px-4 py-6 overflow-y-auto\">\r\n                <nav className=\"space-y-2\">\r\n                  {navigation.map(item => {\n                const IconComponent = item.icon;\n                return <Link key={item.name} to={item.href} className={`flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors ${item.current ? 'bg-slate-700 text-white' : 'text-slate-300 hover:bg-slate-700 hover:text-white'}`} onClick={() => setIsMobileMenuOpen(false)}>\r\n                        <IconComponent className=\"mr-3 h-5 w-5\" />\r\n                        <span>{item.name}</span>\r\n                      </Link>;\n              })}\r\n                  \r\n                  {/* Mobile Logout Button */}\r\n                  <button onClick={() => {\n                setIsMobileMenuOpen(false);\n                handleLogout();\n              }} className=\"w-full flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors text-slate-300 hover:bg-red-600 hover:text-white mt-4\">\r\n                    <ArrowRightOnRectangleIcon className=\"mr-3 h-5 w-5\" />\r\n                    <span>Logout</span>\r\n                  </button>\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 lg:mr-72\">\r\n        <div className=\"lg:hidden bg-white shadow-sm border-b border-gray-200 px-4 py-3 flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-lg font-semibold text-gray-900\">Notes</h1>\r\n          </div>\r\n          <button onClick={() => setIsMobileMenuOpen(true)} className=\"text-gray-500 hover:text-gray-700\">\r\n            <Bars3Icon className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          <div className=\"mb-8\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h1 className=\"text-3xl font-bold text-gray-900 hidden lg:block\">\uD83D\uDCDD My Notes</h1>\r\n                <p className=\"text-gray-600 mt-2\">Organize and manage your study notes</p>\r\n              </div>\r\n              <button onClick={() => setShowCreateModal(true)} className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center\">\r\n                <PlusIcon className=\"h-5 w-5 mr-2\" />\r\n                New Note\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Search and Filters */}\r\n          <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n              <div className=\"relative\">\r\n                <MagnifyingGlassIcon className=\"h-5 w-5 absolute left-3 top-3 text-gray-400\" />\r\n                <input type=\"text\" placeholder=\"Search notes...\" value={searchTerm} onChange={e => setSearchTerm(e.target.value)} className=\"w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\" />\r\n              </div>\r\n              \r\n              <select value={selectedCourse} onChange={e => setSelectedCourse(e.target.value)} className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n                <option value=\"all\">All Courses</option>\r\n                {courses.map(course => <option key={course.id} value={course.id.toString()}>\r\n                    {course.name}\r\n                  </option>)}\r\n              </select>\r\n              \r\n              <select value={selectedTag} onChange={e => setSelectedTag(e.target.value)} className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n                <option value=\"all\">All Tags</option>\r\n                {allTags.map(tag => <option key={tag} value={tag}>\r\n                    {tag}\r\n                  </option>)}\r\n              </select>\r\n              \r\n              <div className=\"text-sm text-gray-500 self-center\">\r\n                {filteredNotes.length} of {notes.length} notes\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Notes Grid */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {filteredNotes.map(note => <div key={note.id} className=\"bg-white shadow rounded-lg p-6 hover:shadow-lg transition-shadow\">\r\n                <div className=\"flex items-start justify-between mb-3\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900 truncate flex-1 mr-2\">\r\n                    {note.title}\r\n                  </h3>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <button onClick={() => handleFavorite(note.id, note.is_favorite)} className={`p-1 rounded ${note.is_favorite ? 'text-yellow-500' : 'text-gray-400 hover:text-yellow-500'}`}>\r\n                      <StarIcon className=\"h-5 w-5\" />\r\n                    </button>\r\n                    <button onClick={() => {\n                  setEditingNote(note);\n                  setShowCreateModal(true);\n                }} className=\"p-1 text-gray-400 hover:text-blue-500\">\r\n                      <PencilIcon className=\"h-5 w-5\" />\r\n                    </button>\r\n                    <button onClick={() => handleDelete(note.id)} className=\"p-1 text-gray-400 hover:text-red-500\">\r\n                      <TrashIcon className=\"h-5 w-5\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                <p className=\"text-gray-600 text-sm mb-3 line-clamp-3\">\r\n                  {note.content}\r\n                </p>\r\n                \r\n                <div className=\"flex items-center justify-between text-xs text-gray-500\">\r\n                  <span>\r\n                    {note.courses?.name || 'No course'}\r\n                  </span>\r\n                  <span>\r\n                    {new Date(note.created_at).toLocaleDateString()}\r\n                  </span>\r\n                </div>\r\n                \r\n                {note.tags && note.tags.length > 0 && <div className=\"mt-3 flex flex-wrap gap-1\">\r\n                    {note.tags.map((tag, index) => <span key={index} className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-blue-100 text-blue-800\">\r\n                        <TagIcon className=\"h-3 w-3 mr-1\" />\r\n                        {tag}\r\n                      </span>)}\r\n                  </div>}\r\n              </div>)}\r\n          </div>\r\n\r\n          {filteredNotes.length === 0 && <div className=\"text-center py-12\">\r\n              <BookOpenIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n              <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No notes found</h3>\r\n              <p className=\"mt-1 text-sm text-gray-500\">\r\n                {notes.length === 0 ? 'Get started by creating your first note.' : 'Try adjusting your search or filters.'}\r\n              </p>\r\n            </div>}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Create/Edit Note Modal */}\r\n      {showCreateModal && <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n          <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" onClick={() => {\n          setShowCreateModal(false);\n          setEditingNote(null);\n        }}></div>\r\n\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n              <fetcher.Form onSubmit={handleSubmit}>\r\n                <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n                    {editingNote ? 'Edit Note' : 'Create New Note'}\r\n                  </h3>\r\n                  \r\n                  <div className=\"space-y-4\">\r\n                    <div>\r\n                      <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700\">\r\n                        Title\r\n                      </label>\r\n                      <input type=\"text\" name=\"title\" id=\"title\" required defaultValue={editingNote?.title || ''} className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\" />\r\n                    </div>\r\n                    \r\n                    <div>\r\n                      <label htmlFor=\"course_id\" className=\"block text-sm font-medium text-gray-700\">\r\n                        Course (Optional)\r\n                      </label>\r\n                      <select name=\"course_id\" id=\"course_id\" defaultValue={editingNote?.course_id || ''} className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n                        <option value=\"\">No course</option>\r\n                        {courses.map(course => <option key={course.id} value={course.id}>\r\n                            {course.name}\r\n                          </option>)}\r\n                      </select>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                      <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700\">\r\n                        Content\r\n                      </label>\r\n                      <textarea name=\"content\" id=\"content\" rows={6} required defaultValue={editingNote?.content || ''} className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\" />\r\n                    </div>\r\n                    \r\n                    <div>\r\n                      <label htmlFor=\"tags\" className=\"block text-sm font-medium text-gray-700\">\r\n                        Tags (comma-separated)\r\n                      </label>\r\n                      <input type=\"text\" name=\"tags\" id=\"tags\" defaultValue={editingNote?.tags?.join(', ') || ''} placeholder=\"e.g. important, exam, review\" className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                  <button type=\"submit\" className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\r\n                    {editingNote ? 'Update' : 'Create'}\r\n                  </button>\r\n                  <button type=\"button\" onClick={() => {\n                setShowCreateModal(false);\n                setEditingNote(null);\n              }} className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </fetcher.Form>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n    </div>;\n}\n_s(StudentNotes, \"dkHGAUQ/YfsfZ3Srers8c2hHbhA=\", false, function () {\n  return [useLoaderData, useNavigate, useFetcher];\n});\n_c = StudentNotes;\nvar _c;\n$RefreshReg$(_c, \"StudentNotes\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
