{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\login.tsx\");\n  import.meta.hot.lastModified = \"1757752669264.618\";\n}\n// REMIX HMR END\n\nimport { useState, useEffect } from \"react\";\nimport { signInWithGoogle, testDatabaseConnection, supabase } from \"~/utils/supabase\";\nexport const meta = () => {\n  return [{\n    title: \"Login - EduHub\"\n  }, {\n    name: \"description\",\n    content: \"Login to your EduHub account with Gmail\"\n  }];\n};\nexport default function Login() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Check for error messages from URL params\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const errorParam = urlParams.get('error');\n    if (errorParam) {\n      switch (errorParam) {\n        case 'not_allowed':\n          setError('Your email is not authorized to access this application. Please contact your administrator.');\n          break;\n        case 'no_email':\n          setError('No email address found in your Google account. Please try again.');\n          break;\n        case 'auth_failed':\n          setError('Authentication failed. Please try again.');\n          break;\n        case 'session_failed':\n          setError('Failed to establish session. Please try again.');\n          break;\n        case 'unexpected_error':\n          setError('An unexpected error occurred. Please try again.');\n          break;\n        default:\n          setError('An error occurred during login. Please try again.');\n      }\n    }\n  }, []);\n  const handleGoogleLogin = async () => {\n    console.log('=== GOOGLE LOGIN CLICKED ===');\n    console.log('Current URL:', window.location.href);\n    console.log('User Agent:', navigator.userAgent);\n    setIsLoading(true);\n    setError(null);\n    try {\n      console.log('Calling signInWithGoogle...');\n\n      // Test if supabase is working first\n      const {\n        data: testSession,\n        error: testError\n      } = await supabase.auth.getSession();\n      console.log('Current session test:', {\n        testSession,\n        testError\n      });\n      const result = await signInWithGoogle();\n      console.log('Google OAuth result:', result);\n      if (result.error) {\n        console.error('OAuth error details:', {\n          message: result.error.message,\n          status: result.error.status\n        });\n        setError(`OAuth Error: ${result.error.message}`);\n      } else {\n        console.log('OAuth initiated successfully');\n        console.log('Should redirect to Google now...');\n\n        // Add a timeout to check if redirect happened\n        setTimeout(() => {\n          console.log('Still on login page after 3 seconds - redirect may have failed');\n          if (window.location.pathname === '/login') {\n            setError('OAuth redirect failed. Please check your browser settings.');\n            setIsLoading(false);\n          }\n        }, 3000);\n      }\n    } catch (err) {\n      console.error('Exception during Google login:', err);\n      const errorMessage = err instanceof Error ? err.message : 'Unknown error';\n      setError(`Login failed: ${errorMessage}`);\n      setIsLoading(false);\n    }\n  };\n  const handleTestDatabase = async () => {\n    console.log('Testing database connection...');\n    await testDatabaseConnection();\n  };\n  const handleManualTest = async () => {\n    console.log('=== MANUAL TEST ===');\n    // Simulate a successful login for testing\n    sessionStorage.setItem('isAuthenticated', 'true');\n    sessionStorage.setItem('userEmail', 'anjai0600@gmail.com');\n    sessionStorage.setItem('userType', 'student');\n    sessionStorage.setItem('userName', 'Anjai');\n    console.log('Manual session set, redirecting...');\n    window.location.href = '/student/dashboard';\n  };\n  const handleOAuthTest = async () => {\n    console.log('=== OAUTH SIMPLE TEST ===');\n    try {\n      // Simple test to see if we can get current session\n      const {\n        data: session,\n        error\n      } = await supabase.auth.getSession();\n      console.log('Current session:', {\n        session,\n        error\n      });\n\n      // Test OAuth without redirect\n      console.log('Testing signInWithOAuth...');\n      const result = await supabase.auth.signInWithOAuth({\n        provider: 'google',\n        options: {\n          redirectTo: window.location.origin + '/auth/callback'\n        }\n      });\n      console.log('OAuth result:', result);\n    } catch (err) {\n      console.error('OAuth test error:', err);\n    }\n  };\n  return <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4\">\r\n      <div className=\"max-w-md w-full\">\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-2\">EduHub</h1>\r\n          <p className=\"text-gray-600\">Your Academic Companion</p>\r\n          <p className=\"text-sm text-gray-500 mt-2\">Sign in with your authorized Gmail account</p>\r\n        </div>\r\n        \r\n        <div className=\"bg-white rounded-lg shadow-xl p-8\">\r\n          <h2 className=\"text-2xl font-bold text-center text-gray-900 mb-6\">\r\n            Welcome Back\r\n          </h2>\r\n          \r\n          {error && <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-md\">\r\n              <p className=\"text-sm text-red-600\">{error}</p>\r\n            </div>}\r\n          \r\n          <div className=\"text-center mb-6\">\r\n            <p className=\"text-gray-600\">\r\n              Sign in to access your dashboard. You'll be redirected based on your account type.\r\n            </p>\r\n          </div>\r\n          \r\n          <button onClick={handleGoogleLogin} disabled={isLoading} className=\"w-full bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white font-semibold py-4 px-6 rounded-lg transition-colors duration-200 flex items-center justify-center space-x-3\">\r\n            {isLoading ? <div className=\"flex items-center space-x-2\">\r\n                <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                <span>Connecting to Google...</span>\r\n              </div> : <>\r\n                <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\">\r\n                  <path fill=\"white\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\" />\r\n                  <path fill=\"white\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\" />\r\n                  <path fill=\"white\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\" />\r\n                  <path fill=\"white\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\" />\r\n                </svg>\r\n                <span className=\"text-lg\">Continue with Gmail</span>\r\n              </>}\r\n          </button>\r\n          \r\n          <div className=\"mt-6 text-center\">\r\n            <p className=\"text-xs text-gray-500\">\r\n              By signing in, you agree to our Terms of Service and Privacy Policy\r\n            </p>\r\n            <p className=\"text-xs text-gray-400 mt-2\">\r\n              Only authorized email addresses can access this application\r\n            </p>\r\n            \r\n            {/* Debug buttons - remove these in production */}\r\n            <button onClick={handleTestDatabase} className=\"mt-4 text-xs text-blue-500 hover:text-blue-700 underline block\">\r\n              Test Database Connection (Debug)\r\n            </button>\r\n            <button onClick={handleManualTest} className=\"mt-2 text-xs text-green-500 hover:text-green-700 underline block\">\r\n              Manual Login Test (Debug)\r\n            </button>\r\n            <button onClick={handleOAuthTest} className=\"mt-2 text-xs text-orange-500 hover:text-orange-700 underline block\">\r\n              OAuth Test (Debug)\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\n}\n_s(Login, \"e4kBt7QYx/QZ/pIdB4oHDuoMTZc=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["error"]
}
