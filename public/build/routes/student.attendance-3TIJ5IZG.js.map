{
  "version": 3,
  "sources": ["../../../app/routes/student.attendance.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\student.attendance.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\student.attendance.tsx\");\n  import.meta.hot.lastModified = \"1757761737715.853\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport { json } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { ChartBarIcon, CalendarDaysIcon, XMarkIcon, Bars3Icon, HomeIcon, UserGroupIcon, DocumentTextIcon, TrophyIcon, BellIcon, CogIcon } from \"@heroicons/react/24/outline\";\nimport { createSupabaseServerClient } from \"~/lib/supabase.server\";\nexport const meta = () => {\n  return [{\n    title: \"Attendance - EduHub Student\"\n  }, {\n    name: \"description\",\n    content: \"View your attendance records and statistics\"\n  }];\n};\nexport async function loader({\n  request\n}) {\n  const supabase = createSupabaseServerClient(request);\n\n  // For demo purposes, we'll use student ID 1\n  const studentId = 1;\n\n  // Get attendance records for the current student\n  const {\n    data: attendanceRecords\n  } = await supabase.from('attendance').select('*').eq('student_id', studentId).order('date', {\n    ascending: false\n  }).limit(100);\n\n  // Get course names for better display\n  const {\n    data: courses\n  } = await supabase.from('courses').select('*');\n\n  // Calculate monthly attendance statistics\n  const monthlyStats = {};\n  const dailyStats = {};\n  const courseStats = {};\n  attendanceRecords?.forEach(record => {\n    const date = new Date(record.date);\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    const dayKey = record.date;\n    const courseKey = record.course_id;\n\n    // Monthly stats\n    if (!monthlyStats[monthKey]) {\n      monthlyStats[monthKey] = {\n        present: 0,\n        absent: 0,\n        total: 0\n      };\n    }\n    monthlyStats[monthKey].total++;\n    if (record.status === 'present') {\n      monthlyStats[monthKey].present++;\n    } else {\n      monthlyStats[monthKey].absent++;\n    }\n\n    // Daily stats (last 30 days)\n    if (!dailyStats[dayKey]) {\n      dailyStats[dayKey] = {\n        present: 0,\n        absent: 0,\n        total: 0\n      };\n    }\n    dailyStats[dayKey].total++;\n    if (record.status === 'present') {\n      dailyStats[dayKey].present++;\n    } else {\n      dailyStats[dayKey].absent++;\n    }\n\n    // Course stats\n    if (!courseStats[courseKey]) {\n      courseStats[courseKey] = {\n        present: 0,\n        absent: 0,\n        total: 0\n      };\n    }\n    courseStats[courseKey].total++;\n    if (record.status === 'present') {\n      courseStats[courseKey].present++;\n    } else {\n      courseStats[courseKey].absent++;\n    }\n  });\n\n  // Get last 7 days for daily chart\n  const last7Days = [];\n  for (let i = 6; i >= 0; i--) {\n    const date = new Date();\n    date.setDate(date.getDate() - i);\n    const dateKey = date.toISOString().split('T')[0];\n    last7Days.push({\n      date: dateKey,\n      dayName: date.toLocaleDateString('en-US', {\n        weekday: 'short'\n      }),\n      ...(dailyStats[dateKey] || {\n        present: 0,\n        absent: 0,\n        total: 0\n      })\n    });\n  }\n\n  // Get last 6 months for monthly chart\n  const last6Months = [];\n  for (let i = 5; i >= 0; i--) {\n    const date = new Date();\n    date.setMonth(date.getMonth() - i);\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    const monthName = date.toLocaleDateString('en-US', {\n      month: 'short',\n      year: 'numeric'\n    });\n    last6Months.push({\n      month: monthKey,\n      monthName,\n      ...(monthlyStats[monthKey] || {\n        present: 0,\n        absent: 0,\n        total: 0\n      })\n    });\n  }\n\n  // Calculate overall stats\n  const totalRecords = attendanceRecords?.length || 0;\n  const presentCount = attendanceRecords?.filter(r => r.status === 'present').length || 0;\n  const attendancePercentage = totalRecords > 0 ? Math.round(presentCount / totalRecords * 100) : 0;\n  return json({\n    attendanceRecords: attendanceRecords || [],\n    courses: courses || [],\n    last7Days,\n    last6Months,\n    courseStats,\n    totalRecords,\n    presentCount,\n    attendancePercentage\n  });\n}\nexport default function StudentAttendance() {\n  _s();\n  const {\n    attendanceRecords,\n    courses,\n    last7Days,\n    last6Months,\n    courseStats,\n    totalRecords,\n    presentCount,\n    attendancePercentage\n  } = useLoaderData();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [activeChart, setActiveChart] = useState('daily');\n  const navigation = [{\n    name: 'Dashboard',\n    href: '/student/dashboard',\n    icon: HomeIcon,\n    current: false\n  }, {\n    name: 'Assignments',\n    href: '/student/assignments',\n    icon: DocumentTextIcon,\n    current: false\n  }, {\n    name: 'Attendance',\n    href: '/student/attendance',\n    icon: CalendarDaysIcon,\n    current: true\n  }, {\n    name: 'Grades',\n    href: '/student/grades',\n    icon: ChartBarIcon,\n    current: false\n  }, {\n    name: 'Leaderboard',\n    href: '/leaderboard',\n    icon: TrophyIcon,\n    current: false\n  }, {\n    name: 'Announcements',\n    href: '/student/announcements',\n    icon: BellIcon,\n    current: false\n  }, {\n    name: 'Profile',\n    href: '/student/profile',\n    icon: CogIcon,\n    current: false\n  }];\n  const getMaxValue = (data, key) => {\n    return Math.max(...data.map(item => item[key]), 0);\n  };\n  const BarChart = ({\n    data,\n    type\n  }) => {\n    const maxValue = Math.max(getMaxValue(data, 'present'), getMaxValue(data, 'absent'));\n    const chartHeight = 200;\n    return <div className=\"bg-white p-6 rounded-lg shadow\">\r\n        <h3 className=\"text-lg font-semibold mb-4\">\r\n          {type === 'daily' ? 'Last 7 Days' : 'Last 6 Months'} Attendance\r\n        </h3>\r\n        <div className=\"relative\" style={{\n        height: chartHeight + 60\n      }}>\r\n          {/* Y-axis labels */}\r\n          <div className=\"absolute left-0 top-0 h-full flex flex-col justify-between text-xs text-gray-500\">\r\n            <span>{maxValue}</span>\r\n            <span>{Math.round(maxValue * 0.75)}</span>\r\n            <span>{Math.round(maxValue * 0.5)}</span>\r\n            <span>{Math.round(maxValue * 0.25)}</span>\r\n            <span>0</span>\r\n          </div>\r\n          \r\n          {/* Chart area */}\r\n          <div className=\"ml-8 flex items-end justify-between h-full\" style={{\n          height: chartHeight\n        }}>\r\n            {data.map((item, index) => {\n            const presentHeight = maxValue > 0 ? item.present / maxValue * chartHeight : 0;\n            const absentHeight = maxValue > 0 ? item.absent / maxValue * chartHeight : 0;\n            return <div key={index} className=\"flex flex-col items-center flex-1 mx-1\">\r\n                  <div className=\"flex flex-col items-center justify-end\" style={{\n                height: chartHeight\n              }}>\r\n                    {/* Absent bar (red) */}\r\n                    {item.absent > 0 && <div className=\"bg-red-400 w-full max-w-12 rounded-t-sm\" style={{\n                  height: `${absentHeight}px`\n                }} title={`Absent: ${item.absent}`} />}\r\n                    {/* Present bar (green) */}\r\n                    {item.present > 0 && <div className={`bg-green-400 w-full max-w-12 ${item.absent === 0 ? 'rounded-t-sm' : ''}`} style={{\n                  height: `${presentHeight}px`\n                }} title={`Present: ${item.present}`} />}\r\n                  </div>\r\n                  {/* X-axis label */}\r\n                  <span className=\"text-xs text-gray-600 mt-2 transform -rotate-45 origin-center\">\r\n                    {type === 'daily' ? item.dayName : item.monthName}\r\n                  </span>\r\n                </div>;\n          })}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Legend */}\r\n        <div className=\"flex justify-center mt-4 space-x-4\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"w-4 h-4 bg-green-400 rounded mr-2\"></div>\r\n            <span className=\"text-sm text-gray-600\">Present</span>\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            <div className=\"w-4 h-4 bg-red-400 rounded mr-2\"></div>\r\n            <span className=\"text-sm text-gray-600\">Absent</span>\r\n          </div>\r\n        </div>\r\n      </div>;\n  };\n  const CourseAttendanceChart = () => {\n    const courseData = Object.entries(courseStats).map(([courseId, stats]) => {\n      const course = courses.find(c => c.id === parseInt(courseId));\n      const percentage = stats.total > 0 ? Math.round(stats.present / stats.total * 100) : 0;\n      return {\n        courseName: course?.name || `Course ${courseId}`,\n        percentage,\n        present: stats.present,\n        total: stats.total\n      };\n    });\n    return <div className=\"bg-white p-6 rounded-lg shadow\">\r\n        <h3 className=\"text-lg font-semibold mb-4\">Attendance by Course</h3>\r\n        <div className=\"space-y-4\">\r\n          {courseData.map((course, index) => <div key={index}>\r\n              <div className=\"flex justify-between items-center mb-2\">\r\n                <span className=\"text-sm font-medium text-gray-700\">{course.courseName}</span>\r\n                <span className=\"text-sm text-gray-500\">{course.percentage}%</span>\r\n              </div>\r\n              <div className=\"w-full bg-gray-200 rounded-full h-3\">\r\n                <div className={`h-3 rounded-full ${course.percentage >= 90 ? 'bg-green-500' : course.percentage >= 75 ? 'bg-blue-500' : course.percentage >= 60 ? 'bg-yellow-500' : 'bg-red-500'}`} style={{\n              width: `${course.percentage}%`\n            }}></div>\r\n              </div>\r\n              <div className=\"text-xs text-gray-500 mt-1\">\r\n                {course.present}/{course.total} classes attended\r\n              </div>\r\n            </div>)}\r\n        </div>\r\n      </div>;\n  };\n  return <div className=\"min-h-screen bg-gray-50 flex\">\r\n      {/* Right Navigation Bar */}\r\n      <div className=\"fixed right-0 top-0 h-full w-72 bg-slate-800 shadow-2xl transform translate-x-full lg:translate-x-0 transition-transform duration-300 ease-in-out z-40 lg:z-30\">\r\n        <div className=\"flex flex-col h-full\">\r\n          <div className=\"p-6 border-b border-slate-700\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h2 className=\"text-xl font-bold text-white\">EduHub</h2>\r\n                <p className=\"text-sm text-slate-300\">Student Portal</p>\r\n              </div>\r\n              <button onClick={() => setIsMobileMenuOpen(false)} className=\"lg:hidden text-slate-300 hover:text-white\">\r\n                <XMarkIcon className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex-1 px-4 py-6 overflow-y-auto\">\r\n            <nav className=\"space-y-2\">\r\n              {navigation.map(item => {\n              const IconComponent = item.icon;\n              return <Link key={item.name} to={item.href} className={`flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors ${item.current ? 'bg-slate-700 text-white' : 'text-slate-300 hover:bg-slate-700 hover:text-white'}`}>\r\n                    <IconComponent className=\"mr-3 h-5 w-5\" />\r\n                    <span>{item.name}</span>\r\n                  </Link>;\n            })}\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile menu overlay */}\r\n      {isMobileMenuOpen && <div className=\"fixed inset-0 z-50 lg:hidden\">\r\n          <div className=\"absolute inset-0 bg-gray-600 bg-opacity-75\" onClick={() => setIsMobileMenuOpen(false)}></div>\r\n          <div className=\"relative ml-auto h-full w-72 bg-slate-800 shadow-2xl\">\r\n            <div className=\"flex flex-col h-full\">\r\n              <div className=\"p-6 border-b border-slate-700\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <h2 className=\"text-xl font-bold text-white\">EduHub</h2>\r\n                    <p className=\"text-sm text-slate-300\">Student Portal</p>\r\n                  </div>\r\n                  <button onClick={() => setIsMobileMenuOpen(false)} className=\"text-slate-300 hover:text-white\">\r\n                    <XMarkIcon className=\"h-6 w-6\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex-1 px-4 py-6 overflow-y-auto\">\r\n                <nav className=\"space-y-2\">\r\n                  {navigation.map(item => {\n                const IconComponent = item.icon;\n                return <Link key={item.name} to={item.href} className={`flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors ${item.current ? 'bg-slate-700 text-white' : 'text-slate-300 hover:bg-slate-700 hover:text-white'}`} onClick={() => setIsMobileMenuOpen(false)}>\r\n                        <IconComponent className=\"mr-3 h-5 w-5\" />\r\n                        <span>{item.name}</span>\r\n                      </Link>;\n              })}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 lg:mr-72\">\r\n        <div className=\"lg:hidden bg-white shadow-sm border-b border-gray-200 px-4 py-3 flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-lg font-semibold text-gray-900\">Attendance</h1>\r\n          </div>\r\n          <button onClick={() => setIsMobileMenuOpen(true)} className=\"text-gray-500 hover:text-gray-700\">\r\n            <Bars3Icon className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          <div className=\"mb-8\">\r\n            <h1 className=\"text-3xl font-bold text-gray-900 hidden lg:block\">Attendance Dashboard</h1>\r\n            <p className=\"text-gray-600 mt-2\">Track your attendance records and statistics</p>\r\n          </div>\r\n\r\n          {/* Summary Cards */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n              <div className=\"flex items-center\">\r\n                <CalendarDaysIcon className=\"h-8 w-8 text-blue-600 mr-4\" />\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-gray-600\">Total Classes</p>\r\n                  <p className=\"text-2xl font-bold text-gray-900\">{totalRecords}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n              <div className=\"flex items-center\">\r\n                <UserGroupIcon className=\"h-8 w-8 text-green-600 mr-4\" />\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-gray-600\">Present</p>\r\n                  <p className=\"text-2xl font-bold text-gray-900\">{presentCount}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n              <div className=\"flex items-center\">\r\n                <ChartBarIcon className=\"h-8 w-8 text-purple-600 mr-4\" />\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-gray-600\">Attendance Rate</p>\r\n                  <p className={`text-2xl font-bold ${attendancePercentage >= 90 ? 'text-green-600' : attendancePercentage >= 75 ? 'text-blue-600' : attendancePercentage >= 60 ? 'text-yellow-600' : 'text-red-600'}`}>\r\n                    {attendancePercentage}%\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Chart Toggle */}\r\n          <div className=\"mb-6\">\r\n            <div className=\"flex space-x-4\">\r\n              <button onClick={() => setActiveChart('daily')} className={`px-4 py-2 rounded-lg ${activeChart === 'daily' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}>\r\n                Daily View\r\n              </button>\r\n              <button onClick={() => setActiveChart('monthly')} className={`px-4 py-2 rounded-lg ${activeChart === 'monthly' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}>\r\n                Monthly View\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Charts Grid */}\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\r\n            {activeChart === 'daily' ? <BarChart data={last7Days} type=\"daily\" /> : <BarChart data={last6Months} type=\"monthly\" />}\r\n            \r\n            <CourseAttendanceChart />\r\n          </div>\r\n\r\n          {/* Recent Attendance Records */}\r\n          <div className=\"bg-white shadow rounded-lg\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">Recent Attendance</h3>\r\n            </div>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Date\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Course\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Status\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Remarks\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {attendanceRecords.slice(0, 10).map(record => {\n                  const course = courses.find(c => c.id === record.course_id);\n                  return <tr key={record.id} className=\"hover:bg-gray-50\">\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                          {new Date(record.date).toLocaleDateString()}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                          {course?.name || 'Unknown Course'}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${record.status === 'present' ? 'bg-green-100 text-green-800' : record.status === 'absent' ? 'bg-red-100 text-red-800' : 'bg-yellow-100 text-yellow-800'}`}>\r\n                            {record.status}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                          {record.remarks || '-'}\r\n                        </td>\r\n                      </tr>;\n                })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\n}\n_s(StudentAttendance, \"7n8NXCJQwEAjaWIljb+wwcOg68Y=\", false, function () {\n  return [useLoaderData];\n});\n_c = StudentAttendance;\nvar _c;\n$RefreshReg$(_c, \"StudentAttendance\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
